{"version":3,"sources":["Search.js","Course/Course.js","App.js","Course/actions.js","reportWebVitals.js","index.js"],"names":["Search","props","handleChange","event","setState","query","target","value","handleSubmit","search","state","type","this","onChange","onClick","Component","Course","course","name","description","App","a","id","get","response","data","alert","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAEqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,MAAOF,EAAMG,OAAOC,SAPnB,EAUnBC,aAAe,SAACL,GAEd,EAAKF,MAAMQ,OAAO,EAAKC,MAAML,QAT7B,EAAKK,MAAQ,CAAEL,MAAO,IAHL,E,0CAenB,WACE,OACA,gCACE,uBAAOM,KAAK,OAAOJ,MAAOK,KAAKF,MAAML,MAAOQ,SAAUD,KAAKV,eAC3D,wBAAQY,QAASF,KAAKJ,aAAtB,2B,GApB8BO,aCAfC,E,4JACnB,WACE,OACE,gCACE,4BAAIJ,KAAKX,MAAMgB,OAAOC,OACtB,4BAAIN,KAAKX,MAAMgB,OAAOE,qB,GALMJ,a,QCMfK,G,wDACnB,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IAIRQ,OALmB,uCAKV,WAAOJ,GAAP,eAAAgB,EAAA,+ECReC,EDUajB,ECT9BkB,cALI,oDAKOD,GDOT,OAECE,EAFD,OAGL,EAAKpB,SAAS,CAAEa,OAAQO,EAASC,OAH5B,gDAKLC,MAAM,EAAD,IALA,kCCRc,IAACJ,IDQf,oBALU,sDAEjB,EAAKZ,MAAQ,CAAEO,OAAQ,IAFN,E,0CAcnB,WACE,OACE,sBAAKU,UAAU,MAAf,UACE,cAAC,EAAD,CAAQlB,OAAQG,KAAKH,SACrB,cAAC,EAAD,CAAQQ,OAAQL,KAAKF,MAAMO,gB,GAnBFF,cEIlBa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f6eb9bc8.chunk.js","sourcesContent":["import { Component } from 'react'\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { query: '' }\n  }\n\n  handleChange = (event) => {\n    this.setState({ query: event.target.value })\n  }\n\n  handleSubmit = (event) => {\n    // TODO Explore using PropTypes to enforce\n    this.props.search(this.state.query)\n  }\n\n  render() {\n    return (\n    <div>\n      <input type='text' value={this.state.query} onChange={this.handleChange}></input>\n      <button onClick={this.handleSubmit}>Search</button>\n    </div>\n  )}\n}\n","import { Component } from 'react'\n\nexport default class Course extends Component {\n  render() {\n    return (\n      <div>\n        <p>{this.props.course.name}</p>\n        <p>{this.props.course.description}</p>\n      </div>\n    )\n  }\n}\n\n","import { Component } from 'react'\n\nimport Search from './Search.js'\nimport Course from './Course/Course.js'\nimport { getCourse } from './Course/actions.js'\n\nimport './App.css'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { course: {} }\n  }\n\n  search = async (query) => {\n    try {\n      const response = await getCourse(query)\n      this.setState({ course: response.data })\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Search search={this.search}/>\n        <Course course={this.state.course}/>\n      </div>\n    )\n  }\n}\n\n","import { get } from 'axios'\n\nconst BASE = 'https://toffeegryphon.pythonanywhere.com/courses/'\n\n// TODO I think it should not return a promise,\n// should add Component as an arg and update it\nexport const getCourse = (id) => {\n  return get(BASE + id)\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}