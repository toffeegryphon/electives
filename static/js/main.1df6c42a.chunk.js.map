{"version":3,"sources":["utils.js","Search.js","Course/actions.js","TakenCourse.js","Taken.js","Course/Course.js","App.js","reportWebVitals.js","index.js"],"names":["buildCode","school","number","repeat","length","buildMeta","data","count","next","previous","Taken","props","handleChange","event","setState","query","target","value","handleSubmit","codeArr","toUpperCase","replace","split","parse","state","search","handleKeyUp","key","onKeyUp","this","type","onChange","onClick","Component","BASE","searchCourse","params","get","a","response","selectCourses","taken","join","select","TakenCourse","handleDelete","delete","course","uid","did","Search","addCourse","results","some","status","alert","removeCourse","filter","handleAdd","handleSearch","uids","map","push","className","Course","name","section_title","description","App","httpSearch","courses","meta","httpSelect","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1df6c42a.chunk.js","sourcesContent":["// TODO Constants file\nconst FILL_PRE = '@'\nconst FILL_POST = '0'\n\nexport function buildCode(school, number) {\n  // TODO account for longer numbers as well\n  return FILL_PRE.repeat(4 - school.length) + school + number + FILL_POST.repeat(3)\n}\n\n// TODO Actually parsing should be on the back end...\nexport function parse(query) {\n  let code = ''\n  const codeArr = query.toUpperCase().replace(/\\s/g, '').split(/(\\d+)/)\n  if (codeArr.length === 1) { // Only has school, so list all\n    code = codeArr[0]\n  } else {\n    code = buildCode(...codeArr)\n  }\n  return code\n}\n\nexport function buildMeta(data) {\n  return {\n    // Should be called total, count for current size\n    count: data.count,\n    next: data.next,\n    previous: data.previous\n  }\n}\n\n","import { Component } from 'react'\nimport { parse } from './utils.js'\n\nexport default class Taken extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { query: '' }\n  }\n\n  handleChange = (event) => {\n    this.setState({ query: event.target.value })\n  }\n\n  handleSubmit = (event) => {\n    // TODO Explore using PropTypes to enforce\n    const query = parse(this.state.query)\n    this.props.search(query)\n  }\n\n  handleKeyUp = (event) => {\n    switch (event.key) {\n      case 'Enter':\n        this.handleSubmit(event)\n        break\n      default:\n        break\n    }\n  }\n\n  render() {\n    return (\n    <div onKeyUp={this.handleKeyUp}>\n      <input type='text' value={this.state.query} onChange={this.handleChange}></input>\n      <button onClick={this.handleSubmit}>Search</button>\n      <span> for details of a course by course number e.g. CS100</span>\n    </div>\n  )}\n}\n","import { get } from 'axios'\n\nconst BASE = 'https://toffeegryphon.pythonanywhere.com/courses/'\nconst QUERY_SEARCH = 'search'\nconst QUERY_TAKEN = 'taken'\n\n// TODO I think it should not return a promise,\n// should add Component as an arg and update it\nexport const getCourse = (id) => {\n  return get(BASE + id)\n}\n\nconst searchCourse = (query) => {\n  const params = { [QUERY_SEARCH]: query }\n  return get(BASE, { params })\n}\n\nexport const search = async (query) => {\n  const response = await searchCourse(query)\n  const data = response.data\n  return data\n}\n\nconst selectCourses = (taken) => {\n  const params = { [QUERY_TAKEN]: taken.join(',') }\n  return get(BASE, { params })\n}\n\nexport const select = async (taken) => {\n  const response = await selectCourses(taken)\n  const data = response.data\n  return data\n}\n","import { Component } from 'react'\n\nexport default class TakenCourse extends Component {\n  handleDelete = (event) => {\n    this.props.delete(this.props.course.uid)\n  }\n\n  render() {\n    return (<div>{this.props.course.did}<button onClick={this.handleDelete}>X</button></div>)\n  }\n}\n","import { Component } from 'react'\nimport { search } from './Course/actions.js'\nimport TakenCourse from './TakenCourse.js'\n\nimport './Taken.css'\n\nexport default class Search extends Component {\n  // TODO merge same, TODO Test backend handle multiple same, TODO delete, TODO clear\n  // TODO Backend if taken is null must apply restrictions also\n  // TODO Backend should also remove courses that have been taken\n  constructor(props) {\n    super(props)\n    // TODO Taken should probably be an object by uid\n    this.state = { query: '', taken: [] }\n  }\n\n  addCourse = async (query) => {\n    try {\n      const data = await search(query);\n      const results = data.results;\n      if (data.count === 0 || this.state.taken.some(course => course.uid === results[0].uid)) {\n        // TODO throw a 404 error\n        this.setState({ query: '' })\n        return\n      }\n      const course = { did: results[0].did, uid: results[0].uid }\n      this.setState({ query: '', taken: [...this.state.taken, course] })\n    } catch (err) {\n      // TODO Use axios.interceptors\n      if (err.response.status === 404) {\n        // TODO show a not found popup\n      } else {\n        alert(err)\n      }\n    }\n  }\n\n  removeCourse = (uid) => {\n    this.setState({ taken: this.state.taken.filter(course => course.uid !== uid) })\n  }\n\n  handleChange = (event) => {\n    this.setState({ query: event.target.value })\n  }\n\n  handleAdd = (event) => {\n    this.addCourse(this.state.query)\n  }\n\n  handleSearch = (event) => {\n    // TODO Use params instead\n    const uids = this.state.taken.map(course => course.uid)\n    this.props.search(uids)\n  }\n\n  handleKeyUp = (event) => {\n    switch (event.key) {\n      case 'Enter':\n        this.handleAdd(event)\n        break\n      default:\n        break\n    }\n  }\n\n  render() {\n    const taken = []\n    for (const course of this.state.taken) {\n      taken.push(\n        <TakenCourse key={course.uid} course={course} delete={this.removeCourse}>\n          {course.did}\n        </TakenCourse>\n      )\n    }\n\n    return (\n    <div onKeyUp={this.handleKeyUp}>\n      <input type='text' value={this.state.query} onChange={this.handleChange}></input>\n      <button onClick={this.handleAdd}>Add</button>\n      <span> course number of taken courses, then </span>\n      <button onClick={this.handleSearch}>List</button>\n      <span> courses you can take.</span>\n      <div className='container'>{taken}</div>\n    </div>\n  )}\n}\n\n","import { Component } from 'react'\n\nimport './Course.css'\n\nexport default class Course extends Component {\n  render() {\n    return (\n      <div>\n        <div className='header'>\n          <div>{this.props.course.did}</div>\n          <div>{this.props.course.name}</div>\n          <div>{this.props.course.section_title}</div>\n        </div>\n        <div className='description'>{this.props.course.description}</div>\n      </div>\n    )\n  }\n}\n\n","import { Component } from 'react'\n\nimport { buildMeta } from './utils.js'\nimport Search from './Search.js'\nimport Taken from './Taken.js'\nimport Course from './Course/Course.js'\nimport { search as httpSearch, select as httpSelect } from './Course/actions.js'\n\nimport './App.css'\n\nconst TYPE_LIST = 0\nconst TYPE_DETAIL = 1\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      type: TYPE_LIST,\n      courses: [],\n      meta: {},\n      course: {} \n    }\n  }\n\n  search = async (query) => {\n    try {\n      const data = await httpSearch(query)\n      if ('count' in data) {\n        // TODO should do merging\n        this.setState({ \n          type: TYPE_LIST, \n          courses: data.results, \n          meta: buildMeta(data)\n        })\n      } else {\n        this.setState({ type: TYPE_DETAIL, course: data })\n      }\n    } catch (err) {\n      // TODO Use axios.interceptors\n      if (err.response.status === 404) {\n      } else {\n        alert(err)\n      }\n    }\n  }\n\n  select = async (taken) => {\n    try {\n      const data = await httpSelect(taken)\n      this.setState({\n        type: TYPE_LIST,\n        courses: data.results,\n        meta: buildMeta(data)\n      })\n    } catch (err) {\n      // TODO Use axios.interceptors\n      if (err.response.status === 404) {\n      } else {\n        alert(err)\n      }\n    }\n  }\n\n  render() {\n    let content\n    switch (this.state.type) {\n      case TYPE_LIST:\n        content = []\n        for (const course of this.state.courses) {\n          content.push(<Course key={course.uid} course={course}/>)\n        }\n        break\n      case TYPE_DETAIL:\n        content = (<Course course={this.state.course}/>)\n        break\n      default:\n        break\n    }\n    return (\n      <div className=\"App\">\n        <Search search={this.search}/>\n        <Taken search={this.select}/>\n        {content}\n      </div>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}