{"version":3,"sources":["utils.js","Search.js","Taken.js","Course/Course.js","App.js","Course/actions.js","reportWebVitals.js","index.js"],"names":["buildCode","school","number","repeat","length","parse","query","codeArr","toUpperCase","replace","split","Taken","props","handleChange","event","setState","target","value","handleSubmit","state","search","handleKeyUp","key","onKeyUp","this","type","onChange","onClick","Component","Search","handleAdd","taken","handleSearch","join","course","push","Course","name","description","App","_buildMeta","data","count","next","previous","a","id","get","response","courses","results","meta","status","alert","content","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ce18d4a.chunk.js","sourcesContent":["// TODO Constants file\nconst FILL_PRE = '@'\nconst FILL_POST = '0'\n\nexport function buildCode(school, number) {\n  // TODO account for longer numbers as well\n  return FILL_PRE.repeat(4 - school.length) + school + number + FILL_POST.repeat(3)\n}\n\n// TODO Actually parsing should be on the back end...\nexport function parse(query) {\n  let code = ''\n  const codeArr = query.toUpperCase().replace(/\\s/g, '').split(/(\\d+)/)\n  if (codeArr.length === 1) { // Only has school, so list all\n    code = codeArr[0]\n  } else {\n    code = buildCode(...codeArr)\n  }\n  return code\n}\n\n","import { Component } from 'react'\nimport { parse } from './utils.js'\n\nexport default class Taken extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { query: '' }\n  }\n\n  handleChange = (event) => {\n    this.setState({ query: event.target.value })\n  }\n\n  handleSubmit = (event) => {\n    // TODO Explore using PropTypes to enforce\n    const query = parse(this.state.query)\n    this.props.search(query)\n  }\n\n  handleKeyUp = (event) => {\n    switch (event.key) {\n      case 'Enter':\n        this.handleSubmit(event)\n        break\n      default:\n        break\n    }\n  }\n\n  render() {\n    return (\n    <div onKeyUp={this.handleKeyUp}>\n      <input type='text' value={this.state.query} onChange={this.handleChange}></input>\n      <button onClick={this.handleSubmit}>Search</button>\n    </div>\n  )}\n}\n","import { Component } from 'react'\nimport { parse } from './utils.js'\n\nconst QUERY_KW = '?taken='\n\nexport default class Search extends Component {\n  // TODO merge same, TODO Test backend handle multiple same, TODO delete, TODO clear\n  // TODO Backend if taken is null must apply restrictions also\n  // TODO Backend should also remove courses that have been taken\n  constructor(props) {\n    super(props)\n\n    this.state = { query: '', taken: [] }\n  }\n\n  handleChange = (event) => {\n    this.setState({ query: event.target.value })\n  }\n\n  handleAdd = (event) => {\n    const query = parse(this.state.query)\n    this.setState({ query: '', taken: [...this.state.taken, query]})\n  }\n\n  handleSearch = (event) => {\n    const query = QUERY_KW + this.state.taken.join(',')\n    this.props.search(query)\n  }\n\n  handleKeyUp = (event) => {\n    switch (event.key) {\n      case 'Enter':\n        this.handleAdd(event)\n        break\n      default:\n        break\n    }\n  }\n\n  render() {\n    const taken = []\n    for (const course of this.state.taken) {\n      taken.push(<div>{course}</div>)\n    }\n\n    return (\n    <div onKeyUp={this.handleKeyUp}>\n      <input type='text' value={this.state.query} onChange={this.handleChange}></input>\n      <button onClick={this.handleAdd}>Add</button>\n      <button onClick={this.handleSearch}>Search</button>\n      {taken}\n    </div>\n  )}\n}\n\n","import { Component } from 'react'\n\nexport default class Course extends Component {\n  render() {\n    return (\n      <div>\n        <p>{this.props.course.name}</p>\n        <p>{this.props.course.description}</p>\n      </div>\n    )\n  }\n}\n\n","import { Component } from 'react'\n\nimport Search from './Search.js'\nimport Taken from './Taken.js'\nimport Course from './Course/Course.js'\nimport { getCourse } from './Course/actions.js'\n\nimport './App.css'\n\nconst TYPE_LIST = 0\nconst TYPE_DETAIL = 1\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      type: TYPE_LIST,\n      courses: [],\n      meta: {},\n      course: {} \n    }\n  }\n\n  _buildMeta = (data) => {\n    return {\n      // Should be called total, count for current size\n      count: data.count,\n      next: data.next,\n      previous: data.previous\n    }\n  }\n\n  search = async (query) => {\n    try {\n      const response = await getCourse(query)\n      const data = response.data\n      if ('count' in data) {\n        // TODO should do merging\n        this.setState({ \n          type: TYPE_LIST, \n          courses: data.results, \n          meta: this._buildMeta(data)\n        })\n      } else {\n        this.setState({ type: TYPE_DETAIL, course: response.data })\n      }\n    } catch (err) {\n      // TODO Use axios.interceptors\n      if (err.response.status === 404) {\n      } else {\n        alert(err)\n      }\n    }\n  }\n\n  render() {\n    let content\n    switch (this.state.type) {\n      case TYPE_LIST:\n        content = []\n        for (const course of this.state.courses) {\n          content.push(<Course course={course}/>)\n        }\n        break\n      case TYPE_DETAIL:\n        content = (<Course course={this.state.course}/>)\n        break\n      default:\n        break\n    }\n    return (\n      <div className=\"App\">\n        <Search search={this.search}/>\n        <Taken search={this.search}/>\n        {content}\n      </div>\n    )\n  }\n}\n\n","import { get } from 'axios'\n\nconst BASE = 'https://toffeegryphon.pythonanywhere.com/courses/'\n\n// TODO I think it should not return a promise,\n// should add Component as an arg and update it\nexport const getCourse = (id) => {\n  return get(BASE + id)\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}